// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class LendingPoolInitialized extends ethereum.Event {
  get params(): LendingPoolInitialized__Params {
    return new LendingPoolInitialized__Params(this);
  }
}

export class LendingPoolInitialized__Params {
  _event: LendingPoolInitialized;

  constructor(event: LendingPoolInitialized) {
    this._event = event;
  }

  get uniswapV2Pair(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token0(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token1(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get collateral(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get borrowable0(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get borrowable1(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get lendingPoolId(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class NewAdmin extends ethereum.Event {
  get params(): NewAdmin__Params {
    return new NewAdmin__Params(this);
  }
}

export class NewAdmin__Params {
  _event: NewAdmin;

  constructor(event: NewAdmin) {
    this._event = event;
  }

  get oldAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewPendingAdmin extends ethereum.Event {
  get params(): NewPendingAdmin__Params {
    return new NewPendingAdmin__Params(this);
  }
}

export class NewPendingAdmin__Params {
  _event: NewPendingAdmin;

  constructor(event: NewPendingAdmin) {
    this._event = event;
  }

  get oldPendingAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newPendingAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewReservesAdmin extends ethereum.Event {
  get params(): NewReservesAdmin__Params {
    return new NewReservesAdmin__Params(this);
  }
}

export class NewReservesAdmin__Params {
  _event: NewReservesAdmin;

  constructor(event: NewReservesAdmin) {
    this._event = event;
  }

  get oldReservesAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newReservesAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewReservesManager extends ethereum.Event {
  get params(): NewReservesManager__Params {
    return new NewReservesManager__Params(this);
  }
}

export class NewReservesManager__Params {
  _event: NewReservesManager;

  constructor(event: NewReservesManager) {
    this._event = event;
  }

  get oldReservesManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newReservesManager(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewReservesPendingAdmin extends ethereum.Event {
  get params(): NewReservesPendingAdmin__Params {
    return new NewReservesPendingAdmin__Params(this);
  }
}

export class NewReservesPendingAdmin__Params {
  _event: NewReservesPendingAdmin;

  constructor(event: NewReservesPendingAdmin) {
    this._event = event;
  }

  get oldReservesPendingAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newReservesPendingAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ImpermaxFactory__getLendingPoolResult {
  value0: boolean;
  value1: i32;
  value2: Address;
  value3: Address;
  value4: Address;

  constructor(
    value0: boolean,
    value1: i32,
    value2: Address,
    value3: Address,
    value4: Address,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    return map;
  }

  getInitialized(): boolean {
    return this.value0;
  }

  getLendingPoolId(): i32 {
    return this.value1;
  }

  getCollateral(): Address {
    return this.value2;
  }

  getBorrowable0(): Address {
    return this.value3;
  }

  getBorrowable1(): Address {
    return this.value4;
  }
}

export class ImpermaxFactory extends ethereum.SmartContract {
  static bind(address: Address): ImpermaxFactory {
    return new ImpermaxFactory("ImpermaxFactory", address);
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allLendingPools(param0: BigInt): Address {
    let result = super.call(
      "allLendingPools",
      "allLendingPools(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return result[0].toAddress();
  }

  try_allLendingPools(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "allLendingPools",
      "allLendingPools(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allLendingPoolsLength(): BigInt {
    let result = super.call(
      "allLendingPoolsLength",
      "allLendingPoolsLength():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_allLendingPoolsLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allLendingPoolsLength",
      "allLendingPoolsLength():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  bDeployer(): Address {
    let result = super.call("bDeployer", "bDeployer():(address)", []);

    return result[0].toAddress();
  }

  try_bDeployer(): ethereum.CallResult<Address> {
    let result = super.tryCall("bDeployer", "bDeployer():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  cDeployer(): Address {
    let result = super.call("cDeployer", "cDeployer():(address)", []);

    return result[0].toAddress();
  }

  try_cDeployer(): ethereum.CallResult<Address> {
    let result = super.tryCall("cDeployer", "cDeployer():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createBorrowable0(uniswapV2Pair: Address): Address {
    let result = super.call(
      "createBorrowable0",
      "createBorrowable0(address):(address)",
      [ethereum.Value.fromAddress(uniswapV2Pair)],
    );

    return result[0].toAddress();
  }

  try_createBorrowable0(uniswapV2Pair: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createBorrowable0",
      "createBorrowable0(address):(address)",
      [ethereum.Value.fromAddress(uniswapV2Pair)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createBorrowable1(uniswapV2Pair: Address): Address {
    let result = super.call(
      "createBorrowable1",
      "createBorrowable1(address):(address)",
      [ethereum.Value.fromAddress(uniswapV2Pair)],
    );

    return result[0].toAddress();
  }

  try_createBorrowable1(uniswapV2Pair: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createBorrowable1",
      "createBorrowable1(address):(address)",
      [ethereum.Value.fromAddress(uniswapV2Pair)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createCollateral(uniswapV2Pair: Address): Address {
    let result = super.call(
      "createCollateral",
      "createCollateral(address):(address)",
      [ethereum.Value.fromAddress(uniswapV2Pair)],
    );

    return result[0].toAddress();
  }

  try_createCollateral(uniswapV2Pair: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createCollateral",
      "createCollateral(address):(address)",
      [ethereum.Value.fromAddress(uniswapV2Pair)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getLendingPool(param0: Address): ImpermaxFactory__getLendingPoolResult {
    let result = super.call(
      "getLendingPool",
      "getLendingPool(address):(bool,uint24,address,address,address)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new ImpermaxFactory__getLendingPoolResult(
      result[0].toBoolean(),
      result[1].toI32(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toAddress(),
    );
  }

  try_getLendingPool(
    param0: Address,
  ): ethereum.CallResult<ImpermaxFactory__getLendingPoolResult> {
    let result = super.tryCall(
      "getLendingPool",
      "getLendingPool(address):(bool,uint24,address,address,address)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ImpermaxFactory__getLendingPoolResult(
        value[0].toBoolean(),
        value[1].toI32(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toAddress(),
      ),
    );
  }

  pendingAdmin(): Address {
    let result = super.call("pendingAdmin", "pendingAdmin():(address)", []);

    return result[0].toAddress();
  }

  try_pendingAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall("pendingAdmin", "pendingAdmin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reservesAdmin(): Address {
    let result = super.call("reservesAdmin", "reservesAdmin():(address)", []);

    return result[0].toAddress();
  }

  try_reservesAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "reservesAdmin",
      "reservesAdmin():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reservesManager(): Address {
    let result = super.call(
      "reservesManager",
      "reservesManager():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_reservesManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "reservesManager",
      "reservesManager():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reservesPendingAdmin(): Address {
    let result = super.call(
      "reservesPendingAdmin",
      "reservesPendingAdmin():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_reservesPendingAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "reservesPendingAdmin",
      "reservesPendingAdmin():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  simpleUniswapOracle(): Address {
    let result = super.call(
      "simpleUniswapOracle",
      "simpleUniswapOracle():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_simpleUniswapOracle(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "simpleUniswapOracle",
      "simpleUniswapOracle():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  uint2str(_i: BigInt): string {
    let result = super.call("uint2str", "uint2str(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_i),
    ]);

    return result[0].toString();
  }

  try_uint2str(_i: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("uint2str", "uint2str(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_i),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  uniswapV2Factory(): Address {
    let result = super.call(
      "uniswapV2Factory",
      "uniswapV2Factory():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_uniswapV2Factory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "uniswapV2Factory",
      "uniswapV2Factory():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _reservesAdmin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _bDeployer(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _cDeployer(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _uniswapV2Factory(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _simpleUniswapOracle(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class _acceptAdminCall extends ethereum.Call {
  get inputs(): _acceptAdminCall__Inputs {
    return new _acceptAdminCall__Inputs(this);
  }

  get outputs(): _acceptAdminCall__Outputs {
    return new _acceptAdminCall__Outputs(this);
  }
}

export class _acceptAdminCall__Inputs {
  _call: _acceptAdminCall;

  constructor(call: _acceptAdminCall) {
    this._call = call;
  }
}

export class _acceptAdminCall__Outputs {
  _call: _acceptAdminCall;

  constructor(call: _acceptAdminCall) {
    this._call = call;
  }
}

export class _acceptReservesAdminCall extends ethereum.Call {
  get inputs(): _acceptReservesAdminCall__Inputs {
    return new _acceptReservesAdminCall__Inputs(this);
  }

  get outputs(): _acceptReservesAdminCall__Outputs {
    return new _acceptReservesAdminCall__Outputs(this);
  }
}

export class _acceptReservesAdminCall__Inputs {
  _call: _acceptReservesAdminCall;

  constructor(call: _acceptReservesAdminCall) {
    this._call = call;
  }
}

export class _acceptReservesAdminCall__Outputs {
  _call: _acceptReservesAdminCall;

  constructor(call: _acceptReservesAdminCall) {
    this._call = call;
  }
}

export class _setPendingAdminCall extends ethereum.Call {
  get inputs(): _setPendingAdminCall__Inputs {
    return new _setPendingAdminCall__Inputs(this);
  }

  get outputs(): _setPendingAdminCall__Outputs {
    return new _setPendingAdminCall__Outputs(this);
  }
}

export class _setPendingAdminCall__Inputs {
  _call: _setPendingAdminCall;

  constructor(call: _setPendingAdminCall) {
    this._call = call;
  }

  get newPendingAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _setPendingAdminCall__Outputs {
  _call: _setPendingAdminCall;

  constructor(call: _setPendingAdminCall) {
    this._call = call;
  }
}

export class _setReservesManagerCall extends ethereum.Call {
  get inputs(): _setReservesManagerCall__Inputs {
    return new _setReservesManagerCall__Inputs(this);
  }

  get outputs(): _setReservesManagerCall__Outputs {
    return new _setReservesManagerCall__Outputs(this);
  }
}

export class _setReservesManagerCall__Inputs {
  _call: _setReservesManagerCall;

  constructor(call: _setReservesManagerCall) {
    this._call = call;
  }

  get newReservesManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _setReservesManagerCall__Outputs {
  _call: _setReservesManagerCall;

  constructor(call: _setReservesManagerCall) {
    this._call = call;
  }
}

export class _setReservesPendingAdminCall extends ethereum.Call {
  get inputs(): _setReservesPendingAdminCall__Inputs {
    return new _setReservesPendingAdminCall__Inputs(this);
  }

  get outputs(): _setReservesPendingAdminCall__Outputs {
    return new _setReservesPendingAdminCall__Outputs(this);
  }
}

export class _setReservesPendingAdminCall__Inputs {
  _call: _setReservesPendingAdminCall;

  constructor(call: _setReservesPendingAdminCall) {
    this._call = call;
  }

  get newReservesPendingAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _setReservesPendingAdminCall__Outputs {
  _call: _setReservesPendingAdminCall;

  constructor(call: _setReservesPendingAdminCall) {
    this._call = call;
  }
}

export class CreateBorrowable0Call extends ethereum.Call {
  get inputs(): CreateBorrowable0Call__Inputs {
    return new CreateBorrowable0Call__Inputs(this);
  }

  get outputs(): CreateBorrowable0Call__Outputs {
    return new CreateBorrowable0Call__Outputs(this);
  }
}

export class CreateBorrowable0Call__Inputs {
  _call: CreateBorrowable0Call;

  constructor(call: CreateBorrowable0Call) {
    this._call = call;
  }

  get uniswapV2Pair(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CreateBorrowable0Call__Outputs {
  _call: CreateBorrowable0Call;

  constructor(call: CreateBorrowable0Call) {
    this._call = call;
  }

  get borrowable0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateBorrowable1Call extends ethereum.Call {
  get inputs(): CreateBorrowable1Call__Inputs {
    return new CreateBorrowable1Call__Inputs(this);
  }

  get outputs(): CreateBorrowable1Call__Outputs {
    return new CreateBorrowable1Call__Outputs(this);
  }
}

export class CreateBorrowable1Call__Inputs {
  _call: CreateBorrowable1Call;

  constructor(call: CreateBorrowable1Call) {
    this._call = call;
  }

  get uniswapV2Pair(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CreateBorrowable1Call__Outputs {
  _call: CreateBorrowable1Call;

  constructor(call: CreateBorrowable1Call) {
    this._call = call;
  }

  get borrowable1(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateCollateralCall extends ethereum.Call {
  get inputs(): CreateCollateralCall__Inputs {
    return new CreateCollateralCall__Inputs(this);
  }

  get outputs(): CreateCollateralCall__Outputs {
    return new CreateCollateralCall__Outputs(this);
  }
}

export class CreateCollateralCall__Inputs {
  _call: CreateCollateralCall;

  constructor(call: CreateCollateralCall) {
    this._call = call;
  }

  get uniswapV2Pair(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CreateCollateralCall__Outputs {
  _call: CreateCollateralCall;

  constructor(call: CreateCollateralCall) {
    this._call = call;
  }

  get collateral(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class InitializeLendingPoolCall extends ethereum.Call {
  get inputs(): InitializeLendingPoolCall__Inputs {
    return new InitializeLendingPoolCall__Inputs(this);
  }

  get outputs(): InitializeLendingPoolCall__Outputs {
    return new InitializeLendingPoolCall__Outputs(this);
  }
}

export class InitializeLendingPoolCall__Inputs {
  _call: InitializeLendingPoolCall;

  constructor(call: InitializeLendingPoolCall) {
    this._call = call;
  }

  get uniswapV2Pair(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeLendingPoolCall__Outputs {
  _call: InitializeLendingPoolCall;

  constructor(call: InitializeLendingPoolCall) {
    this._call = call;
  }
}
